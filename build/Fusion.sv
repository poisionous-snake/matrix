// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

module Fusion(	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:75:7]
  input         clock,	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:75:7]
                reset,	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:75:7]
  input  [7:0]  io_int8,	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:76:16]
  input  [15:0] io_fp16_0,	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:76:16]
                io_fp16_1,	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:76:16]
  input         io_fusion,	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:76:16]
  output [15:0] io_output0,	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:76:16]
                io_output1	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:76:16]
);

  wire [15:0] _norm1_io_fp16;	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:105:23]
  wire [15:0] _norm0_io_fp16;	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:104:23]
  wire [14:0] _fracSum1_io_fracSum;	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:95:26]
  wire [14:0] _fracSum0_io_fracSum;	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:94:26]
  wire        sign0 = io_int8[3] ^ io_fp16_0[15];	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:85:{24,28,40}]
  wire        sign1 = io_int8[7] ^ io_fp16_1[15];	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:86:{24,28,40}]
  wire [18:0] _GEN = {4'h0, _fracSum0_io_fracSum};	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:89:43, :94:26, :102:49]
  `ifndef SYNTHESIS	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:116:11]
    always @(posedge clock) begin	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:116:11]
      if ((`PRINTF_COND_) & ~reset)	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:116:11]
        $fwrite(32'h80000002, "%b %b\n", _norm0_io_fp16, _norm1_io_fp16);	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:104:23, :105:23, :116:11]
    end // always @(posedge)
  `endif // not def SYNTHESIS
  fracSum fracSum0 (	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:94:26]
    .io_iAbs
      (io_fusion
         ? (sign1 ? ~(io_int8[3:0]) + 4'h1 : io_int8[3:0])
         : sign0 ? ~(io_int8[3:0]) + 4'h1 : io_int8[3:0]),	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:76:16, :85:28, :86:28, :89:{20,28,36,43}, :92:{23,31,40}, :96:28]
    .io_frac    (io_fp16_0[9:0]),	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:97:35]
    .io_fracSum (_fracSum0_io_fracSum)
  );
  fracSum fracSum1 (	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:95:26]
    .io_iAbs    (sign1 ? ~(io_int8[7:4]) + 4'h1 : io_int8[7:4]),	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:86:28, :89:43, :90:{20,28,36,43}]
    .io_frac    (io_fp16_1[9:0]),	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:99:35]
    .io_fracSum (_fracSum1_io_fracSum)
  );
  Norm norm0 (	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:104:23]
    .io_originFp16 (io_fp16_0),
    .io_fracSum    (_GEN),	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:102:49]
    .io_sign       (sign0),	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:85:28]
    .io_fp16       (_norm0_io_fp16)
  );
  Norm norm1 (	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:105:23]
    .io_originFp16 (io_fp16_1),
    .io_fracSum
      (io_fusion ? {_fracSum1_io_fracSum, 4'h0} + _GEN : {4'h0, _fracSum1_io_fracSum}),	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:89:43, :95:26, :102:49, :112:28]
    .io_sign       (sign1),	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:86:28]
    .io_fp16       (_norm1_io_fp16)
  );
  assign io_output0 = _norm0_io_fp16;	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:75:7, :104:23]
  assign io_output1 = _norm1_io_fp16;	// @[home/yzy/chisel-playground/playground/src/Fusion.scala:75:7, :105:23]
endmodule

