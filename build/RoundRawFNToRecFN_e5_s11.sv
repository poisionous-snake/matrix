// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

module RoundRawFNToRecFN_e5_s11(	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:294:5]
  input         io_invalidExc,	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:298:16]
                io_in_isNaN,	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:298:16]
                io_in_isInf,	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:298:16]
                io_in_isZero,	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:298:16]
                io_in_sign,	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:298:16]
  input  [6:0]  io_in_sExp,	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:298:16]
  input  [13:0] io_in_sig,	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:298:16]
  output [16:0] io_out	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:298:16]
);

  RoundAnyRawFNToRecFN_ie5_is13_oe5_os11 roundAnyRawFNToRecFN (	// @[home/yzy/chisel-playground/playground/src/RoundAnyRawFNToRecFN.scala:309:15]
    .io_invalidExc (io_invalidExc),
    .io_in_isNaN   (io_in_isNaN),
    .io_in_isInf   (io_in_isInf),
    .io_in_isZero  (io_in_isZero),
    .io_in_sign    (io_in_sign),
    .io_in_sExp    (io_in_sExp),
    .io_in_sig     (io_in_sig),
    .io_out        (io_out)
  );
endmodule

